"package engine\n\nimport (\n\t\"math\"\n\n\t\"github.com/notnil/chess\"\n)\n\n// Minimax performs a basic minimax search to depth.\n// Returns the best score and move.\nfunc Minimax(game *chess.Game, depth int) (float64, *chess.Move) {\n\tif depth == 0 {\n\t\treturn EvaluateBoard(game), nil\n\t}\n\n\tbestScore := -math.Inf(1)\n\tvar bestMove *chess.Move\n\tif game.Position().Turn() == chess.Black {\n\t\tbestScore = math.Inf(1)\n\t}\n\n\tfor _, move := range game.ValidMoves() {\n\t\tclone := game.Clone()\n\t\tclone.Move(move)\n\t\tscore, _ := Minimax(clone, depth-1)\n\n\t\tif game.Position().Turn() == chess.White {\n\t\t\tif score > bestScore {\n\t\t\t\tbestScore = score\n\t\t\t\tbestMove = move\n\t\t\t}\n\t\t} else {\n\t\t\tif score < bestScore {\n\t\t\t\tbestScore = score\n\t\t\t\tbestMove = move\n\t\t\t}\n\t\t}\n\t}\n\n\treturn bestScore, bestMove\n}\n\n// Note: EvaluateBoard is assumed to be in another package or import accordingly."